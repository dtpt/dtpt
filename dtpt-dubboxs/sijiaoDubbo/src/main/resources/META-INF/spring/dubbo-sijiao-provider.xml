<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo" xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd  
	http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd" default-lazy-init="true">
	
		<context:component-scan base-package="com.dt.dtpt.service"/>
		<context:property-placeholder ignore-unresolvable="true" location="classpath*:/config.properties" />
		<!-- Simple连接池 -->
<!-- 		<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
			<property name="driverClass" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.user}" />
			<property name="password" value="${jdbc.password}" />
		</bean> -->
		<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
			<property name="driverClass" value="${jdbc.driver}" />
			<property name="jdbcUrl" value="${jdbc.url}" />
			<property name="user" value="${jdbc.user}" />
			<property name="password" value="${jdbc.password}" />

			<property name="acquireIncrement" value="${jdbc.acquireIncrement}" />
			<property name="initialPoolSize" value="${jdbc.initialPoolSize}" />
			<property name="minPoolSize" value="${jdbc.minPoolSize}" />
			<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
			<property name="maxIdleTime" value="${jdbc.maxIdleTime}" />
			<property name="maxStatements" value="${jdbc.maxStatements}" />
			<property name="acquireRetryDelay" value="${jdbc.acquireRetryDelay}" />
		</bean>


	<!-- MyBatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<property name="typeAliasesPackage" value="com.dt.dtpt.mybatis"></property>
		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations" value="classpath:/mapper/**/*Mapper.xml" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
	</bean>

    <bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.dt.dtpt.mybatis.mapper,tk.mybatis.mapper.common.Mapper"/>
        <!-- 通用Mapper通过属性注入进行配置，默认不配置时会注册Mapper<T>接口-->
        <property name="properties">
            <value>
                mappers=tk.mybatis.mapper.common.Mapper
            </value>
        </property>
    </bean>
    
	<!-- 事务配置 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	<!-- 配置Spring JDBC -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="sijiaoService" class="com.dt.dtpt.service.sijiao.impl.SijiaoServiceImpl" />
	
    <dubbo:application name="dtpt" owner="programmer" organization="dubbox" />

    <dubbo:registry address="zookeeper://127.0.0.1:2181"/>

    <!-- use tomcat server -->
    <dubbo:protocol name="rest" port="8889" threads="500" contextpath="services" server="tomcat" accepts="500"
                    extension="com.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter"/>

	<dubbo:service interface="com.dt.dtpt.service.sijiao.SijiaoService" ref="sijiaoService"  protocol="rest"  timeout="2000" connections="100"/>
	<dubbo:reference id="publicwxService" interface="com.dt.dtpt.service.publicwx.PublicwxService"/>
</beans>